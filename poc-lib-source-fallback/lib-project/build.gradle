import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    // The bootJar task tries to create an executable jar, and that requires a main() method.
    // As a result, you need to disable it by disabling the the Spring Boot plugin,
    // while keeping it for its dependency management features.
    id 'org.springframework.boot' version '3.2.5' apply false
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
}

group = 'com.example.libproject'
version = '0.1.0'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = 17
}

dependencyManagement {
    imports {
        // Since plugin is disabled, it needs BOM to manage dependencies.
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.apache.commons:commons-lang3:3.17.0'

    testImplementation platform("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
    testImplementation platform('org.apache.groovy:groovy-bom:4.0.20')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.groovy:groovy'
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'org.spockframework:spock-spring'
    testImplementation 'io.rest-assured:rest-assured'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = 17
    withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}
