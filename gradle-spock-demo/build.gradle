plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', '2023.0.1')
	set('springCloudAzureVersion', '5.14.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

dependencies {
	// mandatory dependencies for using Spock
	implementation platform('org.apache.groovy:groovy-bom:4.0.20')
	implementation 'org.apache.groovy:groovy'
	testImplementation platform("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
	testImplementation 'org.spockframework:spock-core'
	// Using Spock with Spring also requires spock-spring module.
	testImplementation 'org.spockframework:spock-spring'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compileOnly('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// Azure storage blob
	implementation 'com.azure.spring:spring-cloud-azure-starter-storage-blob'
	implementation 'com.azure:azure-storage-blob-batch:12.18.0'
	implementation 'com.azure:azure-identity'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured'
	// Testcontainers
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:spock'
	testImplementation 'org.testcontainers:mongodb'
	testImplementation "org.testcontainers:postgresql"
	// Embedded
	testImplementation 'com.github.codemonstur:embedded-redis:1.4.3'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.14.0'
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
	testLogging {
		events 'PASSED', 'SKIPPED', 'FAILED'
	}
}
